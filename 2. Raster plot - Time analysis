%% 	To run this script you will need:

	- TTMtx :  a matrix with the time of each spike and its waveform.
		First column: time of the spikes (in ms); column 2: probe; column 3: channel
		From column 4 to column 131: waveform amplitude (32 col for each channel) organized as follolws:
		the first 4 (from colum 4 to column 7) contains values of the first timepoint for all channels 
		(column 4 -> channel 1, column 5 -> channel 2, column 6 -> channel 3, column 7 -> channe l4),
		the second 4 (from column 8 to column 11) contains values of the second timepoint for all channels 
		(column 5 -> channel 1, column 6 -> channel 2, col7 -> channel 3, column 8 -> channel 4), and so on...              
	- PosMtx: a matrix of timesteps (in sec, column 1) and x (column 2) and y (column 3) corresponding positions
	- E_FlagMtx: a matrix of event flags corresponding to each timestep

To test the code you can use the PosMtx, TTMtx and E_flagMtx that I put at the end of all my codes.
%%


tetrode = 7; cell = 2;

tt_cell2 = TTMtx(TTMtx(:,2)==tetrode & TTMtx(:,3)==cell,1); % Time of spikes

tt_cell2_without_Eflag = tt_cell2;
mat_Eflag = [];

for i = 1:length(E_FlagMtx)
    spikeininterval = find(tt_cell2(:) >= E_FlagMtx(i,1)-2000 & tt_cell2(:) <= E_FlagMtx(i,1)+2000);    % Find spikes 2s before and 2s after crossing goal zone
    timespikeininterval = tt_cell2(spikeininterval);                                                     
    mat_Eflag(i,1:length(timespikeininterval))=timespikeininterval;    % Matrix with one trial per line
    tt_cell2_without_Eflag(spikeininterval) = NaN;    % Array with all the spikes except those 2s after and before crossing goal zone
end

mat_Eflag(mat_Eflag==0) = NaN;
B = ~isnan(tt_cell2_without_Eflag);
% Indice of the last spike (which is not a NaN)
Indice = arrayfun(@(x) find(B(:, x), 1, 'last'), 1:size(tt_cell2_without_Eflag, 2));
% Value of the last spike (which is not a NaN)
Values = arrayfun(@(x,y) tt_cell2_without_Eflag(x,y), Indices, 1:size(tt_cell2_without_Eflag, 2));

mat_Eflag_retr = [];
for j = 1:length(E_FlagMtx)
    mat_Eflag_retr(j,1:size(mat_Eflag,2)) = mat_Eflag(j,:)-E_FlagMtx(j);    % Deduct crossing time (every crossing of goal zone will be set at 0 s)
end

%%
mat_rast = zeros(size(mat_Eflag_retr,1),4000);
bin = -2000:1:2000;
for n = 1:size(mat_Eflag_retr,1)
    for m = 1:size(mat_Eflag_retr,2)
        [~,closest] = min(abs(bin-mat_Eflag_retr(n,m)));
        mat_rast(n,closest) = n;        % Matrix for the raster plot figure
    end
end
mat_rast(:,1) = 0;
mat_rast(mat_rast==0)=NaN;
% 
mat_hist = zeros(size(tt_cell2_without_Eflag,2),4000);

bin2 = 0:1:Values+4000;
for p = 1:size(tt_cell2_without_Eflag,1)
    [~,closest2] = min(abs(bin2-tt_cell2_without_Eflag(p,1)));
    mat_hist(1,closest2) = 1;       % Matrix to compute the mean and the standard deviation (useful for Z-score)
end
mat_hist(:,1) = 0;
mat_hist(mat_rast==0)=NaN;

mat_rast_with1 = mat_rast;

for w = 1:size(mat_rast_with1,1)
    for x = 1:size(mat_rast_with1,2)
        if mat_rast(w,x) > 0
            mat_rast_with1(w,x) = 1;    % Matrix of 1, for the histogram figure
        end
    end 
end

baro = [];
baro2 = [];
binos = 1:200:4001;
for i = 1:length(binos)-1
    matrastbinn = mat_rast_with1(:,binos(i):binos(i+1)-1);
    somme = nansum(matrastbinn(:));
    baro(i) = somme;          % Histogram (number of spikes every 200ms bin)  
end

binos2= 1:200:size(mat_hist,2);
for i = 1:length(binos2)-1
    matrastbinn2 = mat_hist(:,binos2(i):binos2(i+1)-1);
    somme2 = nansum(matrastbinn2(:));
    baro2(i) = somme2;    % Number of spikes throughout the session every 200ms bin
end

baro2mean = mean(baro2(:))*size(matrastbinn,1);      % Number of spikes mean
baro2stddev = std(baro2(:))*sqrt(size(matrastbinn,1)) ;    % Standard deviation of number of spikes 

z_score=[];
for f = 1:length(baro)
    z_score(f) = (baro(f)-baro2mean)/baro2stddev;   % Z-score for each bin
end

zsco_1sec_pre = z_score(1,5:9); zscore_1s_2spre_1s_2spost_mean(1,1) = mean(zsco_1sec_pre); % Z-score 1s before goal zone crossing
zsco_2sec_pre = z_score(1,1:9); zscore_1s_2spre_1s_2spost_mean(1,2) = mean(zsco_2sec_pre); % Z-score 2s before goal zone crossing
zsco_1sec_post = z_score(1,10:14); zscore_1s_2spre_1s_2spost_mean(1,3) = mean(zsco_1sec_post);  % Z-score 1s after goal zone crossing
zsco_2sec_post = z_score(1,10:20); zscore_1s_2spre_1s_2spost_mean(1,4) = mean(zsco_2sec_post);  % Z-score 2s after goal zone crossing

%%  create figure raster plot, histogram, colorbar

figure;
% Create figure of the histogram (number of spikes in each bin during 2s before and after goal zone crossing)
histo = subplot(3,1,2)   
bar(1:size(baro,2),baro,'FaceColor',[0.5 0.5 0.5],'EdgeColor',[0.5 0.5 0.5],'BarWidth',1);
set(gca, 'Color', 'None');
labl = ylabel({'# Potentiel d'action'},'fontsize',12,'Color','k');
set(labl,'Position',get(labl,'Position')-[3 1 5]);
box off;
ylabel([],'Color','k');
set(gca,'XTick',[1 10 20]);
set(gca,'XTicklabel',[-2 0 2]);
xlabel({'Périodes ou la zone but est traverseé (s)'},'fontsize',12,'Color','k');
set(gca,'YColor','none','ytick',[],'yticklabels',[]);
box off; legend off;
set(gca,'Xlim',[0 20]);
set(histo, 'Position',[0.35 0.360 0.30 0.2]);
xline(10);

raster_plot = subplot(3,1,1);
for ligne = 1:size(mat_Eflag_retr,1)
    scatter(1:size(mat_rast,2),mat_rast(ligne,:),'k.');     % Create the raster plot
    hold on;
end
set(gca,'xtick',[],'Ylim',[0,length(mat_Eflag_retr)]);
t = title('Activité du neurone lors de la traversée de la zone de but','fontsize',13);
set(t,'position',get(t,'position')-[100 -30 0]);
labl2 = ylabel({'Essais'},'fontsize',12,'Color','k');
set(labl2,'position',get(labl2,'position')-[650 3 0]);
set(gca, 'Color', 'None');
set(gca,'XColor','none');
set(raster_plot, 'Position',[0.35 0.59 0.30 0.15]);
xline(2000);
