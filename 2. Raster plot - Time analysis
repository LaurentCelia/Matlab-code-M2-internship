%% 	To run this script you will need:
%{
	- (Matlab)
	- tt_cell2:  a matrix with the time of each spike and its waveform.
		First column: time of the spikes (in ms); column 2: probe ; column 3: channel
		From column 4 to column 131: waveform amplitude (32 column for each channel) organized as follolws:
		the first 4 (from colum 4 to column 7) contains values of the first timepoint for all channels 
		(column 4 -> channel 1, column 5 -> channel 2, column 6 -> channel 3, column 7 -> channel 4),
		the second 4 (from column 8 to column 11) contains values of the second timepoint for all channels 
		(column 5 -> channel 1, column 6 -> channel 2, col7 -> channel 3, column 8 -> channel 4), and so on...              
	- PosMtx: a matrix of timesteps (in sec, column 1) and x (column 2) and y (column 3) corresponding positions
	- E_FlagMtx: a matrix of event flags corresponding to each timestep

To test the code you can use the file 'Zmoth_05032020_S1_tet7_cell2.mat' (at the end of all my codes) which contains these 3 variables.
%}
%%

load('Zmoth_05032020_S1_tet7_cell2.mat');

%%

mat_Eflag = [];

for i = 1:length(E_FlagMtx)
    spikeininterval = find(tt_cell2(:,1) >= E_FlagMtx(i,1)-1000 & tt_cell2(:,1) <= E_FlagMtx(i,1)+1000);    % Find spikes 1s before and 1s after crossing goal zone
    timespikeininterval = tt_cell2(spikeininterval);                                                     
    mat_Eflag(i,1:length(timespikeininterval))=timespikeininterval;    % Matrix with one trial per line
end
mat_Eflag(mat_Eflag==0) = NaN;

mat_Eflag_retr = [];
for j = 1:length(E_FlagMtx)
    mat_Eflag_retr(j,1:size(mat_Eflag,2)) = mat_Eflag(j,:)-E_FlagMtx(j);    % Deduct crossing time (every crossing of goal zone will be set at 0 s)
end

%% Create the matrix that will be use to create the raster plot
mat_rast = zeros(size(mat_Eflag_retr,1),2000);
bin = -1000:1:1000;
for n = 1:size(mat_Eflag_retr,1)
    for m = 1:size(mat_Eflag_retr,2)
        [~,closest] = min(abs(bin-mat_Eflag_retr(n,m)));
        mat_rast(n,closest) = n;        % Matrix for the raster plot figure
    end
end
mat_rast(:,1) = 0;
mat_rast(mat_rast==0)=NaN;

%% Create the array that will be use to create the histogram
mat_rast_with1 = mat_rast;

for w = 1:size(mat_rast_with1,1)
    for x = 1:size(mat_rast_with1,2)
        if mat_rast(w,x) > 0
            mat_rast_with1(w,x) = 1;    % Matrix of 1 for each spike
        end
    end 
end


lenght_session = PosMtx(end,1)/1000;	% Length of the session
nb_tot_spikes = length(tt_cell2);	% Total number of spikes during the session
average_rate = nb_tot_spikes/lenght_session;	% Average spike rate during the session
baro = [];
baronorm = [];
binos = 1:200:2001;
for i = 1:length(binos)-1
    matrastbinn = mat_rast_with1(:,binos(i):binos(i+1)-1);	% Find the spikes in each 200 ms bin
    somme_PA = nansum(matrastbinn(:));  % Compute the number of spikes in each 200 ms bin
    freq = (somme_PA*5)/length(E_FlagMtx);  % Compute the spike rate in each 200 ms bin
    baro(i) = freq;    % Array that will be use to create the histogram figure
    baro_norm(i) = freq/average_rate;   % Spike rate in each bin is normalized by the grand average rate of the cell
end

%%  create raster plot and the histogram figure

figure;
histo = subplot(3,1,2)
bar(1:size(baro,2),baro,'FaceColor','k','EdgeColor',[0.5 0.5 0.5],'BarWidth',1);
set(gca, 'Color', 'None');
ylabel({"Fréquence d'activité (Hz)"},'fontsize',12,'Color','k');
box off; legend off;
set(gca,'Xlim',[0.5 10.5]);
set(histo, 'Position',[0.35 0.360 0.30 0.2]);
xline(5.5,'Color','r');
set(gca,'XTick',[0.5 5.5 10.5]);
set(gca,'XTicklabel',[-1 0 1]);
xlabel({'Périodes où la zone but est traverseé (s)'},'fontsize',12,'Color','k');

raster_plot = subplot(3,1,1);
for ligne = 1:size(mat_Eflag_retr,1)
    scatter(1:size(mat_rast,2),mat_rast(ligne,:),'k.');
    hold on
end
set(gca,'Ylim',[0,length(mat_Eflag_retr)]);
t = title('Activité du neurone lors de la traversée de la zone de but','fontsize',13);
ylabel({'Essais'},'fontsize',12,'Color','k');
set(gca, 'Color', 'None'); set(gca,'XColor','none');
set(raster_plot, 'Position',[0.35 0.59 0.30 0.15]);
xline(1000,'Color','r');
